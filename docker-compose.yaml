# docker-compose.yml
# YAML schema for compose-spec
# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json
version: '3.8'

services:
  # Kubernetes MCP server
  k8s-mcp:
    build:
      context: .
    container_name: k8s-mcp
    ports:
      - "8000:8000"  # MCP server
      - "8001:8001"  # Health endpoint
    environment:
      - CONTAINER_TYPE=k8s
      - KUBECONFIG=/home/appuser/.kube-writable/config
    volumes:
      - ~/.kube:/home/appuser/.kube:ro
      - ./data:/home/appuser/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - k8s_agent_net
    entrypoint: ["./entrypoint.sh"]

  # S3 MCP server
  s3-mcp:
    build:
      context: .
    container_name: s3-mcp
    ports:
      - "8010:8010"  # MCP server
      - "8011:8011"  # Health endpoint
    environment:
      - CONTAINER_TYPE=s3
      - AWS_CONFIG_FILE=/home/appuser/.aws/config
      - AWS_SHARED_CREDENTIALS_FILE=/home/appuser/.aws/credentials
    volumes:
      - ~/.aws:/home/appuser/.aws:ro
      - ./data:/home/appuser/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8011/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - k8s_agent_net
    entrypoint: ["./entrypoint.sh"]

  # Streamlit Chat UI
  kubernetes-chat:
    build:
      context: .
    container_name: kubernetes-chat
    ports:
      - "8501:8501"  # Streamlit UI
      - "5678:5678"  # n8n or other port forward
    depends_on:
      k8s-mcp:
        condition: service_healthy
      s3-mcp:
        condition: service_healthy
    environment:
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - MCP_SERVER_URL=http://k8s-mcp:8000/mcp
      - AWS_S3_MCP_URL=http://s3-mcp:8010/mcp
      - KUBECONFIG=/home/appuser/.kube-writable/config
    volumes:
      - ./data:/home/appuser/app/data
      - ~/.kube:/home/appuser/.kube:ro
      - ~/.aws:/home/appuser/.aws:ro
      - ~/.aws/credentials:/home/appuser/.aws/credentials:ro
      - /home/sanjog/projects/fpg/infrastructure-automation/configs/aws/config:/home/appuser/.aws/config:ro
    restart: unless-stopped
    env_file:
      - .env.aws
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501"]
      interval: 15s
      timeout: 5s
      retries: 5
    networks:
      - k8s_agent_net
    entrypoint: ["./entrypoint.sh"]

volumes:
  chat_data:

networks:
  k8s_agent_net:
    name: k8s_agent_net